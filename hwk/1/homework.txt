impL :: Bool -> Bool -> Bool
impL False False = True
impL False True = True
impL True False = False
impL True True = True

notL :: Bool -> Bool
notL False = True
notL True = False

orL :: Bool -> Bool -> Bool
orL False False = False
orL _ _ = True

impL' :: Bool -> Bool -> Bool
impL' = orL(notL(True) False)
impL' _ _ = True

Two functions: myst' is a boolean function. Function myst' checks if a
True or False value is given and then returns either an a or b, respectively.
Function myst is recursive. It takes three arguments and returns a string
of a's and b's by calling myst' and the myst function itself takes two 0's as an argument

sudan :: Integer -> Integer -> Integer -> Integer
sudan x y n = sudan(sudan(x y n+1), sudan(x,y n+1) + y + 1)
